@page "/EmployeesList"
@using Assignment.Data
@using Assignment.Models
@inject EmployeeService employeesservice


<NavLink class="nav-link" href="AddEmployee">
    <span class="oi oi-plus" aria-hidden="true">Add New Employee</span>
</NavLink>

<h1>Employees List</h1>

@if (EmpObj is null)
{
    <p><em>Loading.................</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Employee Code
                </th>

                <th>
                    Name
                </th>

                <th>
                    Phone No
                </th>

                <th>
                    Address
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in EmpObj)
            {
                <tr>
                    <td>@emp.Code</td>
                    <td>@emp.EmployeeName</td>
                    <td>@emp.PhoneNo</td>
                    <td>@emp.Address</td>
                    <td>
                        <a class="nav-link" href="EditEmployee/@emp.EmployeeId">
                            <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                        </a>
                        <a class="nav-link" href="Delete/@emp.EmployeeId">
                            <span class="oi oi-trash" aria-hidden="true">Delete</span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<Employee> EmpObj;

    protected override async Task OnInitializedAsync()
    {
        EmpObj = await Task.Run(() => employeesservice.GetAllEmployees());
    }
}